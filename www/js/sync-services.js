angular.module('sync.services', ['ngCordova'])

.factory('syncService', ['mySqlDbService', '$http','$q',  function(mySqlDbService, $http, $q) {
	  return {
		  uploadPhoto : function (session, imageUri, imageId, recipients, success , error, photoIndex)
		  {
		    	var ft = new FileTransfer();
		        var options = new FileUploadOptions();
		
		        options.fileKey = "foto";
		        options.fileName = 'foto.jpg'; // We will use the name auto-generated by Node at the server side.
		        options.mimeType = "image/jpeg";
		        var serverURL = encodeURI('http://test3.bblabs.com.ar/playup_fotos_2015/web/api/guardar-foto'); //encodeURI('http://www.odiseo.com.ar/projects/brancaAppPhotos/guardar-foto.php'); 
		        options.params = {"sesion_id" : session.uuid , "id": imageId,   "fecha_creacion" : session.date , "cadena_personas" : recipients };
				ft.onprogress = function(progressEvent) 
				{
    				if (progressEvent.lengthComputable) 
    				{
    					var percentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);
    					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n: '+percentage+'%');
    				} else {
      					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n.');
    				}
    				
    				$('.syncProgress ').show();
				};
		        ft.upload(imageUri, serverURL,
				            function (e) {
				               console.log("Imagen sincronizada...");
				               console.log(e);
				               $('.syncProgress ').hide();
				               success(session, imageUri, imageId, recipients);
				         	},
				            function (e) {
				         		console.log("Upload failed");
				            	console.log(e);
				            	$('.syncProgress ').hide();
				            		error(session, imageUri, imageId, recipients);
				            }, options);
	     },
	     
	     mapDataPhotoToUpload : function (session, photo){
	    	 var options = new FileUploadOptions();
	    	 options.fileKey = "foto";
		     options.fileName = 'foto.jpg'; // We will use the name auto-generated by Node at the server side.
		     options.mimeType = "image/jpeg";
		     options.params = {"sesion_id" : session.uuid , "id": photo.uuid,   "fecha_creacion" : session.date , "cadena_personas" : photo.recipients };
		     var serverURL = encodeURI('http://www.odiseo.com.ar/projects/brancaAppPhotos/guardar-foto.php');
		     var imageUri = photo.uri_photo;
		     return {
		    	 options : options,
		    	 serverURL : serverURL,
		    	 imageUri : imageUri,
		     };
	     },
	     
	     
		uploadPhotoPromise : function (session, photo, photoIndex)
		{
	    	var deferred = $q.defer();
	    	var promise =  deferred.promise();
			console.log("subiendo foto:")
	    	var ft = new FileTransfer();
			var dataUploadRequest = mapDataPhotoToUpload(session, photo);
			ft.onprogress = function(progressEvent) 
			{
				if (progressEvent.lengthComputable) 
				{
					var percentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);
					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n: '+percentage+'%');
				} else {
  					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n.');
				}
				
				$('.syncProgress ').show();
			};
	        ft.upload(dataUploadRequest.imageUri, dataUploadRequest.serverURL,
			            function (e) {
			               deferred.resolve(e);
			               $('.syncProgress ').hide();
			         	},
			            function (e) {
			            	$('.syncProgress ').hide();
			            	deferred.reject(e);
			            }, dataUploadRequest.options);
	        
	        return promise;
		},
	    
	    saveSession : function (url , dataReq){
	    	var req = {
	    			 method: 'POST',
	    			 url: url,
	    			 data: jQuery.param(dataReq) ,
	    			 headers: {'Content-Type': 'application/x-www-form-urlencoded'}
	    	};
	    	return $http(req);
	       	//.success(function(){...}).error(function(){...});
	   },
	   
	    saveSessionPromise : function (url , dataReq){
	    	var deferred = Q.defer();
			var promise = deferred.promise;
	    	var req = {
	    			 method: 'POST',
	    			 url: url,
	    			 data: jQuery.param(dataReq) ,
	    			 headers: {'Content-Type': 'application/x-www-form-urlencoded'}
	    	};
	    	$http(req).success(
	    			function(data,status, headers,config ){
	    				deferred.resolve();
	    			}
	    	).error(
	    			function(err){
	    				deferred.reject(err);
	    			}
	    	);
	    	return promise;
	   },
	  };
  }
])
