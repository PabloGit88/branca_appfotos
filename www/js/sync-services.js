angular.module('sync.services', ['ngCordova'])

.factory('syncService', ['mySqlDbService', '$http','$q',  function(mySqlDbService, $http, $q) {
	 
	function mapDataPhotoToUpload(session, photo)
    {
   	 var options = new FileUploadOptions();
   	 var d = new Date(photo.date_created);
   	 var fechaCreacionFoto = d.format("yyyy-mm-dd");
   	 console.log("fecha creacion foto: " + fechaCreacionFoto);
   	 
   	 options.fileKey = "foto";
	     options.fileName = 'foto.jpg'; // We will use the name auto-generated by Node at the server side.
	     options.mimeType = "image/jpeg";
	     options.params = {"sesion_id" : session.uuid , "id": photo.uuid,   "fecha_creacion" : fechaCreacionFoto , "cadena_personas" : photo.recipients };
	     var serverURL = encodeURI('http://test3.bblabs.com.ar/playup_fotos_2015/web/api/guardar-foto'); //encodeURI('http://www.odiseo.com.ar/projects/brancaAppPhotos/guardar-foto.php');
	     var imageUri = photo.uri_photo;

	     return {
	    	 options : options,
	    	 serverURL : serverURL,
	    	 imageUri : imageUri,
	     };
    }
	
	return {
		  uploadPhoto : function (session, imageUri, imageId, recipients, success , error, photoIndex)
		  {
		    	var ft = new FileTransfer();
		        var options = new FileUploadOptions();
		
		        options.fileKey = "foto";
		        options.fileName = 'foto.jpg'; // We will use the name auto-generated by Node at the server side.
		        options.mimeType = "image/jpeg";
		        var serverURL = encodeURI('http://test3.bblabs.com.ar/playup_fotos_2015/web/api/guardar-foto'); //encodeURI('http://www.odiseo.com.ar/projects/brancaAppPhotos/guardar-foto.php'); 
		        options.params = {"sesion_id" : session.uuid , "id": imageId,   "fecha_creacion" : session.date , "cadena_personas" : recipients };
				ft.onprogress = function(progressEvent) 
				{
    				if (progressEvent.lengthComputable) 
    				{
    					var percentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);
    					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n: '+percentage+'%');
    				} else {
      					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n.');
    				}
    				
    				$('.syncProgress ').show();
				};
		        ft.upload(imageUri, serverURL,
				            function (e) {
				               console.log("Imagen sincronizada...");
				               console.log(e);
				               $('.syncProgress ').hide();
				               success(session, imageUri, imageId, recipients);
				         	},
				            function (e) {
				         		console.log("Upload failed");
				            	console.log(e);
				            	$('.syncProgress ').hide();
				            		error(session, imageUri, imageId, recipients);
				            }, options);
	     },
	     
	     
		uploadPhotoPromise : function (session, photo, photoIndex)
		{
	    	var deferred = $q.defer();
	    	var promise =  deferred.promise;
			console.log("subiendo foto:")
			var data = {
				session : session,
				photo : photo,
				photoIndex : photoIndex,
			}
	    	var ft = new FileTransfer();
			var dataUploadRequest = mapDataPhotoToUpload(session, photo);

			ft.onprogress = function(progressEvent) 
			{
				if (progressEvent.lengthComputable) 
				{
					var percentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);
					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n: '+percentage+'%');
				} else {
  					$('.syncProgress span').html('Sincronizando foto '+(photoIndex+1)+' de la sesi贸n.');
				}
				
				$('.syncProgress ').show();
			};
	        ft.upload(dataUploadRequest.imageUri, dataUploadRequest.serverURL, function (e)
	        {
                if (data.error == true){
                	deferred.reject(data);
                }
                else {
                	deferred.resolve(data);
	        	}
                console.log("resultado de subir foto. Data:");
	        	console.log(e);
                $('.syncProgress').hide();
                
            },function (e)
            {
                $('.syncProgress ').hide();
                if ( FileTransferError.FILE_NOT_FOUND_ERR  == e.code)
                	deferred.resolve(data);
                else  deferred.reject(data);
                console.log(e);
            }, dataUploadRequest.options);
	        
	        return promise;
		},
	    
        saveSession : function (url, dataReq)
        {
	    	var req = {
                method: 'POST',
                url: url,
                data: jQuery.param(dataReq) ,
                headers: {'Content-Type': 'application/x-www-form-urlencoded'}
	    	};

	    	return $http(req);
        },
	   
        saveSessionPromise : function (url, dataReq, session)
        {
	    	var returnData = {
	    		session: session,
	    		err : '',
	    		responseData : {},
	    	};
        	
	    	console.log("data Request: " + dataReq);
        	var deferred = $q.defer();
			var promise = deferred.promise;
	    	var req = {
                method: 'POST',
                url: url,
                data: jQuery.param(dataReq) ,
                headers: {'Content-Type': 'application/x-www-form-urlencoded'}
	    	};

	    	$http(req).success(function(data,status, headers,config )
	    	{
	    		returnData.responseData = data;
	    		console.log("Resultado de subir session. returnData : ");
	    		console.log(returnData);
	    		deferred.resolve(returnData);
            }).error(function(data,status, headers,config )
            {
            	returnData.err = err;
            	returnData.responseData = data;
                deferred.reject(returnData);
            });

	    	return promise;
        }
    };
}])
